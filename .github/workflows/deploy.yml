name: CI/CD for Multi-Modal LLM Project

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Debug environment
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        run: |
          echo "PINECONE_API_KEY is set: ${PINECONE_API_KEY:+set}"
      - name: Test backend
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        run: |
          cd backend
          nohup python app.py > server.log 2>&1 &
          sleep 10
          curl -v http://localhost:5001/players || (cat server.log && exit 1)

  frontend:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: |
          cd frontend
          npm install --force
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: frontend/build
          retention-days: 7
      - name: Bump version
        if: github.ref == 'refs/heads/main'
        run: |
          cd frontend
          npm run release
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): bump version [skip ci]" || true
          git push origin main
          git push origin --tags
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: team_VhE4nun5vM4sJt4RpUUxRfpx
          VERCEL_PROJECT_ID: prj_SZLRkUlm6THaZRODlV9Njo1WKYn5
        run: |
          cd frontend
          npm cache clean --force
          npm install -g vercel@32.5.1
          echo -e "team_VhE4nun5vM4sJt4RpUUxRfpx\nprj_SZLRkUlm6THaZRODlV9Njo1WKYn5" | vercel link --token=${VERCEL_TOKEN} --yes
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            vercel deploy --prebuilt --prod --token=${VERCEL_TOKEN} --yes 2>&1 | tee deploy.log
          else
            vercel deploy --prebuilt --token=${VERCEL_TOKEN} --yes 2>&1 | tee deploy.log
          fi
          DEPLOY_URL=$(grep -o '[invalid url, do not cite] ]*\.vercel\.app' deploy.log | head -1)
          echo "Deployment URL: ${DEPLOY_URL}"

- name: Debug Git config
  run: git config --get user.name && git config --get user.email
