name: Deploy Python Flask + React

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4

      # 2. Set up Python (Backend)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # 3.Install
      - name: Install Python dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          # First try clean requirements.txt install
          pip install -r requirements.txt --no-cache-dir --ignore-installed || \
          # Fallback to direct install if requirements.txt fails
          pip install flask==2.3.2 flask-cors==3.0.10 flask-sqlalchemy==3.0.3 flask-bcrypt==1.0.1

      # 4. Set up Node.js (Frontend)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 5. Install frontend dependencies
      - name: Install React dependencies
        run: |
          cd frontend
          npm install

      # 6. Build React app
      - name: Build React app
        run: |
          cd frontend
          npm run build

      # 7. Test Flask backend (smoke test)
      - name: Test Flask server
        run: |
          cd backend
          python app.py &  # Run in background
          sleep 5  # Wait for server to start
          curl http://localhost:5000/players  # Test endpoint

      # 8. Deploy (example: Vercel for frontend + Heroku for backend)
      - name: Deploy Frontend to Vercel
        run: |
          cd frontend
          npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        if: github.ref == 'refs/heads/main'

      - name: Deploy Backend to Heroku
        run: |
          cd backend
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/your-app-name.git
          git push heroku main -f
        if: github.ref == 'refs/heads/main'
